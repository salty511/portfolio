---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
---
<Layout title="JWST Simulation">
	<h1>JWST Simulation</h1>
	<br>
	<img class="h-80" src="/assets/img/jwst_plot.png"/>
	
	<hr>

	<ul> 
		<li><b>Goal:</b> Simulate the trajectory of the James Webb Space Telescope (JWST) as it travels to its orbit around L2, and evaluate how GPU acceleration improves the performance of Runge-Kutta integration.</li>
		<br>
		<li><b>Tools/Tech:</b> Python, NumPy, CuPy, Matplotlib, Astroquery</li>
	</ul>
	<br>
	<p>
		This project involved developing a custom Runge-Kutta numerical solver in Python to model the orbits of all 9 major planets in the Solar System. 
		Using data from NASA's JPL Horizons system, the simulation traces the trajectory of the James Webb Space Telescope as it travels toward 
		the Earth-Sun L2 Lagrange point.
	</p>
	<br>
	<p>
		The solver was implemented using both CPU (NumPy) and GPU (CuPy) backends to benchmark performance improvements. An adaptive step-size 
		version of the integrator was also created for greater stability and accuracy. The simulation remains close to real ephemeris data for 
		several months before divergingâ€”demonstrating both the strength and limits of Newtonian integration in an N-body context.
	</p>
	<br>
	<p>
		ðŸ”— <b>Repo:</b> <a href="https://github.com/salty511/gravitational-sim" target="_blank">gravitational-sim</a><br>
		ðŸ“˜ <b>Rendered Notebook:</b> <a href="https://github.com/salty511/gravitational-sim/blob/master/main.ipynb" target="_blank">View on GitHub</a>
	</p>

</Layout>